#include "stdafx.h" // 
#include "FunMod.h" // 
#include "MyPhRec.h" // подлключение библиотек
#include <iostream> // 
using namespace std; // авто использование пространства имён

CMyPhRec::CMyPhRec() // конструктор
{
}


CMyPhRec::~CMyPhRec() // деструктор
{
}

bool CMyPhRec::Input() // функция ввода данных
{
	cout << "Номер: "; // 
	bool er = false; // инициализация переменной для оповещения пользователя о нахождении ошибок в записи телефона
	string sA; // объявление переменной ввода строки с номером телефона
	char cA[MY_STR_MAX_LEN]; // объявление переменной для обработки введённой строки с номером телефона
	cin >> sA;// ввод номера телефона
	strcpy_s(cA, sA.size() + 1, sA.c_str()); // перенос строки с номером телефона в другую переменную
	StrRepair(cA, &er); // "починка" строки
	if (er) cout << "Mistakes was found and fixed" << endl; // если есть ошибки то сообщить об этом
	else cout << "No mistakes found" << endl; // если нет - тоже
	m_No = atoll(cA); // присваивание переменной значение отредактированной строки
	if (!m_No) return false; // если номер телефона равен 0 то закончить ввод
	cout << "Имя: "; // 
	cin >> m_Nik; // ввод имени
	cout << "Адрес: "; // 
	cin >> m_Addr;; // ввод емаила
	return true; // возвращение true
}

void CMyPhRec::Output() // функция вывода
{
	size_t cT1 = m_Nik.size(); // инициализация переменной, равной длинне строки имени
	size_t cT3 = m_Addr.size(); // инициализация переменной, равной длине строки емаила
	int pom = 1; // инициализация переменной-счетчика, равной единице
	__int64 t = m_No; // инициализация переменной, которая равна введённому номеру телефона
	while (t) // цикл поиска количества цифр в номере телефона, работает пока переменная не 0
	{
		t /= 10; // делим переменную на 10
		pom++; // увеличиваем счетчик на единицу
	}
	for (size_t i = 0; i <= 15 - cT1; i++) cout << " "; // выводим пробелы
	cout << m_Nik << "|"; // после пробелов выводим имя и ставим |
	for (int i = 0; i <= 13 - pom; i++) cout << " "; // выводим пробелы
	cout << m_No << "|"; // после пробелов выводим номер телефона и ставим |
	for (size_t i = 0; i <= 21 - cT3; i++) cout << " "; // выводим пробелы
	cout << m_Addr << "|"; // после пробелов выводим емаил и ставим |
	unsigned __int64 mask = __int64(1) << 36; // инициализация переменной (номер телефона максимально равен 99999999999, а это 37 символов в двоичной записи)
	while (mask) // пока маска не 0
	{
		if (m_No & mask) // если побитовое логическое И не 0
			cout << "1"; // то выводим 1
		else cout << "0"; // иначе выводим 0
		mask = mask / 2; // делим маску на 2
	}
	cout << " " << endl; // выводим в конце пробел и переходим на следующую строку
}